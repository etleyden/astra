services:
  db:
    image: postgres:16
    container_name: astra-dev-db
    environment:
      POSTGRES_USER: astra
      POSTGRES_PASSWORD: 4stra!
      POSTGRES_DB: astradb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5
  frontend:
    build:
      context: ../
      dockerfile: ./containers/Dockerfile.ui
    depends_on:
      db:
        condition: service_healthy
    container_name: vite-frontend
    ports:
      - "5173:5173"
    volumes:
      - ../packages/ui:/app
      - /app/node_modules # ensures host node_modules doesn't overwrite container's
    networks:
      - app-network
    environment:
      - NODE_ENV=development
  api:
    build:
      context: ../
      dockerfile: ./containers/Dockerfile.api
    container_name: express-api
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3443:3443"
    volumes:
      - ../packages/api:/usr/src/app
      - /usr/src/app/node_modules
      - ../packages/api/certs:/usr/src/app/certs
    environment:
      - NODE_ENV=development
    networks:
      - app-network
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80" # Map pgAdmin web interface to host port 5050
    depends_on:
      - db # Ensure PostgreSQL starts before pgAdmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin # Persist pgAdmin configuration
    networks:
      - app-network

volumes:
  pgdata:
  pgadmin_data:

networks:
  app-network:
